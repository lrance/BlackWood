package edu.nodak.ndsu.cs.lions.blackwood.GUI;

import java.awt.Color;
import java.awt.event.ActionEvent;

import javax.swing.*;

import edu.nodak.ndsu.cs.lions.blackwood.Main;
import edu.nodak.ndsu.cs.lions.blackwood.MooConnection;


public class ForgetPasswordFrame extends javax.swing.JFrame{
	
	 		javax.swing.JTextPane errorTextPanel;
		  	javax.swing.JPanel jpanelforget;
		  	javax.swing.JButton comButton;
		    javax.swing.JLabel confirmEmail;
		    javax.swing.JLabel showpsw;
		    javax.swing.JLabel showuser;
		    javax.swing.JTextField emailTextField;
		    javax.swing.JTextField showpsw1;
		    javax.swing.JTextField showuser1;
		    
		    public ForgetPasswordFrame() {
				initComponents();
			}
		    
		    @SuppressWarnings("unchecked")
		    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
		    private void initComponents() {
		    	errorTextPanel = new JTextPane();
		    	jpanelforget = new JPanel();
		    	comButton = new JButton();
		    	showpsw = new JLabel();
		    	showuser = new JLabel();
		    	confirmEmail = new JLabel();
		    	emailTextField = new JTextField();
		    	showpsw1 = new JTextField();
		    	showuser1 = new JTextField();
		    	setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		    	
		    	//setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		        setTitle("Get your Password and Username");
		        setBackground(Main.COLOR_YELLOW);
		        setForeground(Main.COLOR_YELLOW);
		        setSize(800,800);
		        setResizable(true);
		       
		        jpanelforget.setBackground(Main.COLOR_YELLOW);
		        jpanelforget.setForeground(Main.COLOR_YELLOW);
		        jpanelforget.setEnabled(false);
		        
		        confirmEmail.setLabelFor(emailTextField);
		        confirmEmail.setText("Give your Email: ");
		        
		        showuser.setLabelFor(showuser1);
		        showuser.setText("Your Username is: ");
		        showpsw.setLabelFor(showpsw1);
		        showpsw.setText("Your password is: ");
		        
		        comButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/nodak/ndsu/cs/lions/blackwood/Resources/Image/interface/passwordfinder.gif"))); // NOI18N
		        comButton.setBorder(null);
		        comButton.setBorderPainted(false);
		        comButton.setContentAreaFilled(false);
		        comButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/nodak/ndsu/cs/lions/blackwood/Resources/Image/interface/passwordfinder.gif"))); // NOI18N
		        comButton.addActionListener(new java.awt.event.ActionListener() {
		            public void actionPerformed(java.awt.event.ActionEvent evt) {
		                comButtonActionPerformed(evt);
		            }

					
		        });
		        

		        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jpanelforget);
		        jpanelforget.setLayout(jPanel1Layout);
		        jPanel1Layout.setHorizontalGroup(
		            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addGroup(jPanel1Layout.createSequentialGroup()
		                .addContainerGap()
		                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		                    .addGroup(jPanel1Layout.createSequentialGroup()
		                        .addComponent(showpsw)
		                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE))
		                    .addGroup(jPanel1Layout.createSequentialGroup()
		                        .addComponent(showuser)
		                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE))
		                         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
		                        		 .addComponent(confirmEmail)
		                        		 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
		                        		 	.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
		                        		 			.addComponent(emailTextField, javax.swing.GroupLayout.Alignment.LEADING)
		                        		 			.addComponent(showpsw1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
		                        		 			.addComponent(showuser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
		                            
		                           ))))                 
		                          
		                    .addGroup(jPanel1Layout.createSequentialGroup()
		                        .addComponent(comButton)
		                        ));
		             		                        
		        jPanel1Layout.setVerticalGroup(
		            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addGroup(jPanel1Layout.createSequentialGroup()
		                .addContainerGap()	               
		                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                    .addComponent(confirmEmail)
		                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addGap(10, 10, 10)
		                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                    .addComponent(showpsw)
		                    .addComponent(showpsw1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addGap(10, 10, 10) 
		                  .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                    .addComponent(showuser)
		                    .addComponent(showuser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addGap(10, 10, 10)
		                    .addComponent(comButton))
		              
		        );

		        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		        getContentPane().setLayout(layout);
		         layout.setHorizontalGroup(
		            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addComponent(jpanelforget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
		        );
		        layout.setVerticalGroup(
		            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		            .addComponent(jpanelforget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		        );

		        pack();
		    	
		    }

		    private void comButtonActionPerformed(ActionEvent evt) {

		    	MooConnection mooo = new MooConnection();
		    	final String email = emailTextField.getText();
		    	final String username = showuser.getText();
				if(validateEmail()){
					try
					{
		
						showpsw1.setToolTipText(mooo.getPassword(email, username));
					}
					catch (Exception ex)
					{
						ex.printStackTrace();
						JOptionPane.showMessageDialog(null, "Sorry, I could not connect to LambdaMoo using that user name and password.\n" + " Exception: " + ex.getMessage());
						return;
					}
				}
			}  
	 void forgetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comButtonActionPerformed
			
		 	errorTextPanel.setText("");
			errorTextPanel.setEnabled(false);

			showpsw.setForeground(new Color(51,51,51));
			confirmEmail.setForeground(new Color(51,51,51));
		 
		 
		 boolean isEmailAddress = validateEmail();
		  if(isEmailAddress){
			  MooConnection mooo = new MooConnection();
			  String s = mooo.getPassword(emailTextField.getText(), showuser.getText());
			  showpsw1.setText(s);
		  }
}


	 boolean validateEmail(){
			String email = emailTextField.getText();
		boolean isValid = true;
		if (email.lastIndexOf("@") < email.lastIndexOf("."))
		{
			emailTextField.setForeground(new Color(51,51,51));
			isValid = true;
		}
		else
		{
			emailTextField.setForeground(Color.RED);
			errorTextPanel.setText(errorTextPanel.getText() + "Your email address is incorrect.\n");
			errorTextPanel.setEnabled(true);
			isValid = false;
		}

		return isValid;
	}
	  

}
